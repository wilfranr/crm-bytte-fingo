{
  "version": 3,
  "sources": ["../../../../../../node_modules/primeng/fesm2022/primeng-togglebutton.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, inject, booleanAttribute, numberAttribute, ContentChildren, ContentChild, Output, Input, HostListener, HostBinding, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport * as i1 from 'primeng/ripple';\nimport { Ripple } from 'primeng/ripple';\nconst _c0 = [\"icon\"];\nconst _c1 = [\"content\"];\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nconst _c3 = (a0, a1) => ({\n  \"p-togglebutton-icon\": true,\n  \"p-togglebutton-icon-left\": a0,\n  \"p-togglebutton-icon-right\": a1\n});\nfunction ToggleButton_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.checked ? ctx_r0.onIcon : ctx_r0.offIcon);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c3, ctx_r0.iconPos === \"left\", ctx_r0.iconPos === \"right\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToggleButton_Conditional_2_Conditional_0_Conditional_0_Template, 1, 7, \"span\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵconditional(ctx_r0.onIcon || ctx_r0.offIcon ? 0 : -1);\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToggleButton_Conditional_2_Conditional_1_ng_container_0_Template, 1, 0, \"ng-container\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconTemplate || ctx_r0._iconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r0.checked));\n  }\n}\nfunction ToggleButton_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToggleButton_Conditional_2_Conditional_0_Template, 1, 1)(1, ToggleButton_Conditional_2_Conditional_1_Template, 1, 4, \"ng-container\");\n    i0.ɵɵelementStart(2, \"span\", 0);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(!ctx_r0.iconTemplate ? 0 : 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.cx(\"label\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.checked ? ctx_r0.hasOnLabel ? ctx_r0.onLabel : \"\\xA0\" : ctx_r0.hasOffLabel ? ctx_r0.offLabel : \"\\xA0\");\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-togglebutton {\n    display: inline-flex;\n    cursor: pointer;\n    user-select: none;\n    overflow: hidden;\n    position: relative;\n    color: ${dt('togglebutton.color')};\n    background: ${dt('togglebutton.background')};\n    border: 1px solid ${dt('togglebutton.border.color')};\n    padding: ${dt('togglebutton.padding')};\n    font-size: 1rem;\n    font-family: inherit;\n    font-feature-settings: inherit;\n    transition: background ${dt('togglebutton.transition.duration')}, color ${dt('togglebutton.transition.duration')}, border-color ${dt('togglebutton.transition.duration')},\n        outline-color ${dt('togglebutton.transition.duration')}, box-shadow ${dt('togglebutton.transition.duration')};\n    border-radius: ${dt('togglebutton.border.radius')};\n    outline-color: transparent;\n    font-weight: ${dt('togglebutton.font.weight')};\n}\n\n.p-togglebutton-content {\n    display: inline-flex;\n    flex: 1 1 auto;\n    align-items: center;\n    justify-content: center;\n    gap: ${dt('togglebutton.gap')};\n    padding: ${dt('togglebutton.content.padding')};\n    background: transparent;\n    border-radius: ${dt('togglebutton.content.border.radius')};\n    transition: background ${dt('togglebutton.transition.duration')}, color ${dt('togglebutton.transition.duration')}, border-color ${dt('togglebutton.transition.duration')},\n            outline-color ${dt('togglebutton.transition.duration')}, box-shadow ${dt('togglebutton.transition.duration')};\n}\n\n.p-togglebutton:not(:disabled):not(.p-togglebutton-checked):hover {\n    background: ${dt('togglebutton.hover.background')};\n    color: ${dt('togglebutton.hover.color')};\n}\n\n.p-togglebutton.p-togglebutton-checked {\n    background: ${dt('togglebutton.checked.background')};\n    border-color: ${dt('togglebutton.checked.border.color')};\n    color: ${dt('togglebutton.checked.color')};\n}\n\n.p-togglebutton-checked .p-togglebutton-content {\n    background: ${dt('togglebutton.content.checked.background')};\n    box-shadow: ${dt('togglebutton.content.checked.shadow')};\n}\n\n.p-togglebutton:focus-visible {\n    box-shadow: ${dt('togglebutton.focus.ring.shadow')};\n    outline: ${dt('togglebutton.focus.ring.width')} ${dt('togglebutton.focus.ring.style')} ${dt('togglebutton.focus.ring.color')};\n    outline-offset: ${dt('togglebutton.focus.ring.offset')};\n}\n\n.p-togglebutton.p-invalid {\n    border-color: ${dt('togglebutton.invalid.border.color')};\n}\n\n.p-togglebutton:disabled:not(.p-togglebutton-checked) {\n    opacity: 1;\n    cursor: default;\n    background: ${dt('togglebutton.disabled.background')};\n    border-color: ${dt('togglebutton.disabled.border.color')};\n    color: ${dt('togglebutton.disabled.color')};\n}\n\n.p-togglebutton-label,\n.p-togglebutton-icon {\n    position: relative;\n    transition: none;\n}\n\n.p-togglebutton-icon {\n    color: ${dt('togglebutton.icon.color')};\n}\n\n.p-togglebutton:not(:disabled):not(.p-togglebutton-checked):hover .p-togglebutton-icon {\n    color: ${dt('togglebutton.icon.hover.color')};\n}\n\n.p-togglebutton.p-togglebutton-checked .p-togglebutton-icon {\n    color: ${dt('togglebutton.icon.checked.color')};\n}\n\n.p-togglebutton:disabled .p-togglebutton-icon {\n    color: ${dt('togglebutton.icon.disabled.color')};\n}\n\n.p-togglebutton-sm {\n    padding: ${dt('togglebutton.sm.padding')};\n    font-size: ${dt('togglebutton.sm.font.size')};\n}\n\n.p-togglebutton-sm .p-togglebutton-content {\n    padding: ${dt('togglebutton.content.sm.padding')};\n}\n\n.p-togglebutton-lg {\n    padding: ${dt('togglebutton.lg.padding')};\n    font-size: ${dt('togglebutton.lg.font.size')};\n}\n\n.p-togglebutton-lg .p-togglebutton-content {\n    padding: ${dt('togglebutton.content.lg.padding')};\n}\n\n/* For PrimeNG (iconPos) */\n.p-togglebutton-icon-right {\n    order: 1;\n}\n\n.p-togglebutton.ng-invalid.ng-dirty {\n    border-color: ${dt('togglebutton.invalid.border.color')};\n}\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ({\n    'p-togglebutton p-component': true,\n    'p-togglebutton-checked': instance.checked,\n    'p-disabled': instance.disabled,\n    'p-togglebutton-sm p-inputfield-sm': instance.size === 'small',\n    'p-togglebutton-lg p-inputfield-lg': instance.size === 'large'\n  }),\n  content: 'p-togglebutton-content',\n  icon: 'p-togglebutton-icon',\n  label: 'p-togglebutton-label'\n};\nclass ToggleButtonStyle extends BaseStyle {\n  name = 'togglebutton';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵToggleButtonStyle_BaseFactory;\n    return function ToggleButtonStyle_Factory(__ngFactoryType__) {\n      return (ɵToggleButtonStyle_BaseFactory || (ɵToggleButtonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ToggleButtonStyle)))(__ngFactoryType__ || ToggleButtonStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ToggleButtonStyle,\n    factory: ToggleButtonStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButtonStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * ToggleButton is used to select a boolean value using a button.\n *\n * [Live Demo](https://www.primeng.org/togglebutton/)\n *\n * @module togglebuttonstyle\n *\n */\nvar ToggleButtonClasses;\n(function (ToggleButtonClasses) {\n  /**\n   * Class name of the root element\n   */\n  ToggleButtonClasses[\"root\"] = \"p-togglebutton\";\n  /**\n   * Class name of the icon element\n   */\n  ToggleButtonClasses[\"icon\"] = \"p-togglebutton-icon\";\n  /**\n   * Class name of the label element\n   */\n  ToggleButtonClasses[\"label\"] = \"p-togglebutton-label\";\n})(ToggleButtonClasses || (ToggleButtonClasses = {}));\nconst TOGGLEBUTTON_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n/**\n * ToggleButton is used to select a boolean value using a button.\n * @group Components\n */\nclass ToggleButton extends BaseComponent {\n  get hostClass() {\n    return this.styleClass || '';\n  }\n  onKeyDown(event) {\n    switch (event.code) {\n      case 'Enter':\n        this.toggle(event);\n        event.preventDefault();\n        break;\n      case 'Space':\n        this.toggle(event);\n        event.preventDefault();\n        break;\n    }\n  }\n  toggle(event) {\n    if (!this.disabled && !(this.allowEmpty === false && this.checked)) {\n      this.checked = !this.checked;\n      this.onModelChange(this.checked);\n      this.onModelTouched();\n      this.onChange.emit({\n        originalEvent: event,\n        checked: this.checked\n      });\n      this.cd.markForCheck();\n    }\n  }\n  /**\n   * Label for the on state.\n   * @group Props\n   */\n  onLabel = 'Yes';\n  /**\n   * Label for the off state.\n   * @group Props\n   */\n  offLabel = 'No';\n  /**\n   * Icon for the on state.\n   * @group Props\n   */\n  onIcon;\n  /**\n   * Icon for the off state.\n   * @group Props\n   */\n  offIcon;\n  /**\n   * Defines a string that labels the input for accessibility.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * When present, it specifies that the element should be disabled.\n   * @group Props\n   */\n  disabled;\n  /**\n   * Inline style of the element.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the element.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Identifier of the focus input to match a label defined for the component.\n   * @group Props\n   */\n  inputId;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex = 0;\n  /**\n   * Defines the size of the component.\n   * @group Props\n   */\n  size;\n  /**\n   * Position of the icon.\n   * @group Props\n   */\n  iconPos = 'left';\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Whether selection can not be cleared.\n   * @group Props\n   */\n  allowEmpty;\n  /**\n   * Callback to invoke on value change.\n   * @param {ToggleButtonChangeEvent} event - Custom change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  /**\n   * Custom icon template.\n   * @group Templates\n   */\n  iconTemplate;\n  /**\n   * Custom content template.\n   * @group Templates\n   */\n  contentTemplate;\n  templates;\n  checked = false;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  _componentStyle = inject(ToggleButtonStyle);\n  onBlur() {\n    this.onModelTouched();\n  }\n  writeValue(value) {\n    this.checked = value;\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  get hasOnLabel() {\n    return this.onLabel && this.onLabel.length > 0;\n  }\n  get hasOffLabel() {\n    return this.onLabel && this.onLabel.length > 0;\n  }\n  get active() {\n    return this.checked === true;\n  }\n  _iconTemplate;\n  _contentTemplate;\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'icon':\n          this._iconTemplate = item.template;\n          break;\n        case 'content':\n          this._contentTemplate = item.template;\n          break;\n        default:\n          this._contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵToggleButton_BaseFactory;\n    return function ToggleButton_Factory(__ngFactoryType__) {\n      return (ɵToggleButton_BaseFactory || (ɵToggleButton_BaseFactory = i0.ɵɵgetInheritedFactory(ToggleButton)))(__ngFactoryType__ || ToggleButton);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToggleButton,\n    selectors: [[\"p-toggleButton\"], [\"p-togglebutton\"], [\"p-toggle-button\"]],\n    contentQueries: function ToggleButton_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 23,\n    hostBindings: function ToggleButton_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function ToggleButton_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"click\", function ToggleButton_click_HostBindingHandler($event) {\n          return ctx.toggle($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabindex\", ctx.tabindex);\n        i0.ɵɵattribute(\"disabled\", ctx.disabled)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-pressed\", ctx.checked)(\"data-p-checked\", ctx.active)(\"data-p-disabled\", ctx.disabled)(\"type\", \"button\");\n        i0.ɵɵclassMap(ctx.hostClass);\n        i0.ɵɵclassProp(\"p-togglebutton\", true)(\"p-togglebutton-checked\", ctx.checked)(\"p-disabled\", ctx.disabled)(\"p-togglebutton-sm\", ctx.size === \"small\")(\"p-inputfield-sm\", ctx.size === \"small\")(\"p-togglebutton-lg\", ctx.size === \"large\")(\"p-inputfield-lg\", ctx.size === \"large\");\n      }\n    },\n    inputs: {\n      onLabel: \"onLabel\",\n      offLabel: \"offLabel\",\n      onIcon: \"onIcon\",\n      offIcon: \"offIcon\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      style: \"style\",\n      styleClass: \"styleClass\",\n      inputId: \"inputId\",\n      tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n      size: \"size\",\n      iconPos: \"iconPos\",\n      autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n      allowEmpty: \"allowEmpty\"\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButtonStyle]), i0.ɵɵHostDirectivesFeature([i1.Ripple]), i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 6,\n    consts: [[3, \"ngClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"class\", \"ngClass\"]],\n    template: function ToggleButton_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵtemplate(1, ToggleButton_ng_container_1_Template, 1, 0, \"ng-container\", 1)(2, ToggleButton_Conditional_2_Template, 4, 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.cx(\"content\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || ctx._contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c2, ctx.checked));\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(!ctx.contentTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgTemplateOutlet, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-toggleButton, p-togglebutton, p-toggle-button',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      hostDirectives: [{\n        directive: Ripple\n      }],\n      host: {\n        '[tabindex]': 'tabindex',\n        '[attr.disabled]': 'disabled',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-pressed]': 'checked',\n        '[attr.data-p-checked]': 'active',\n        '[attr.data-p-disabled]': 'disabled',\n        '[attr.type]': '\"button\"',\n        '[class.p-togglebutton]': 'true',\n        '[class.p-togglebutton-checked]': 'checked',\n        '[class.p-disabled]': 'disabled',\n        '[class.p-togglebutton-sm]': 'size === \"small\"',\n        '[class.p-inputfield-sm]': 'size === \"small\"',\n        '[class.p-togglebutton-lg]': 'size === \"large\"',\n        '[class.p-inputfield-lg]': 'size === \"large\"'\n      },\n      template: `<span [ngClass]=\"cx('content')\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate; context: { $implicit: checked }\"></ng-container>\n        @if (!contentTemplate) {\n            @if (!iconTemplate) {\n                @if (onIcon || offIcon) {\n                    <span\n                        [class]=\"checked ? this.onIcon : this.offIcon\"\n                        [ngClass]=\"{\n                            'p-togglebutton-icon': true,\n                            'p-togglebutton-icon-left': iconPos === 'left',\n                            'p-togglebutton-icon-right': iconPos === 'right'\n                        }\"\n                        [attr.data-pc-section]=\"'icon'\"\n                    ></span>\n                }\n            } @else {\n                <ng-container *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { $implicit: checked }\"></ng-container>\n            }\n            <span [ngClass]=\"cx('label')\" [attr.data-pc-section]=\"'label'\">{{ checked ? (hasOnLabel ? onLabel : ' ') : hasOffLabel ? offLabel : ' ' }}</span>\n        }\n    </span>`,\n      providers: [TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButtonStyle],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    toggle: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onLabel: [{\n      type: Input\n    }],\n    offLabel: [{\n      type: Input\n    }],\n    onIcon: [{\n      type: Input\n    }],\n    offIcon: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    size: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    allowEmpty: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    iconTemplate: [{\n      type: ContentChild,\n      args: ['icon', {\n        descendants: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: ['content', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ToggleButtonModule {\n  static ɵfac = function ToggleButtonModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ToggleButtonModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ToggleButtonModule,\n    imports: [ToggleButton, SharedModule],\n    exports: [ToggleButton, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [ToggleButton, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ToggleButton, SharedModule],\n      exports: [ToggleButton, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonClasses, ToggleButtonModule, ToggleButtonStyle };\n"],
  "mappings": "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",
  "names": ["ToggleButtonClasses"]
}
